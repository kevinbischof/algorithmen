{"version":3,"sources":["reportWebVitals.ts","helpers/helper.ts","components/routes/routes.tsx","components/navigation/navigation.styles.ts","components/navigation/navigationMobile.tsx","components/navigation/navigation.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","breakpoints","getIsMobile","useState","window","innerWidth","width","setWidth","handleWindowSizeChange","useEffect","addEventListener","removeEventListener","routes","id","href","name","NavLinkListStyled","styled","div","attrs","className","NavLinkStyled","Link","MobileNavigation","isOpen","toggle","onClick","size","map","route","to","Navigation","setIsOpen","isMobile","role","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAceA,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,sBCPDQ,EAEP,IAqBSC,EAjBY,WACzB,MAA0BC,mBAASC,OAAOC,YAA1C,mBAAOC,EAAP,KAAcC,EAAd,KAEA,SAASC,IACPD,EAASH,OAAOC,YAUlB,OAPAI,qBAAU,WAER,OADAL,OAAOM,iBAAiB,SAAUF,GAC3B,WACLJ,OAAOO,oBAAoB,SAAUH,MAEtC,IAEIF,EAAQL,G,QCTFW,EAPe,CAC5B,CAAEC,GAAI,EAAGC,KAAM,IAAKC,KAAM,QAC1B,CAAEF,GAAI,EAAGC,KAAM,QAASC,KAAM,QAC9B,CAAEF,GAAI,EAAGC,KAAM,SAAUC,KAAM,SAC/B,CAAEF,GAAI,EAAGC,KAAM,WAAYC,KAAM,Y,gBCPtBC,EAAoBC,IAAOC,IAAIC,MAAM,CAChDC,UAAW,aADoBH,CAAH,0BAQfI,EAJcJ,YAAOK,KAAMH,MAAM,CAC9CC,UAAW,YADgBH,CAAH,0B,OCsBXM,EAnBiB,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,OACzC,OACE,qCACE,qBAAKL,UAAU,kDAAf,SACGI,EAAS,cAAC,IAAD,CAAgBE,QAASD,EAAQE,KAAM,KAAS,cAAC,IAAD,CAAeD,QAASD,EAAQE,KAAM,OAElG,qBAAKP,UAAWI,EAAS,4DAA8D,SAAvF,SACGZ,EAAOgB,KAAI,SAACC,GACX,OACE,cAACb,EAAD,UACE,cAAC,EAAD,CAAec,GAAID,EAAMf,KAAzB,SAAgCe,EAAMd,QADhBc,EAAMhB,aCqB3BkB,EAlCW,WACxB,MAA4B5B,oBAAS,GAArC,mBAAOqB,EAAP,KAAeQ,EAAf,KACMC,EAAW/B,IAKjB,OACE,mCACG+B,EACC,cAAC,EAAD,CAAkBT,OAAQA,EAAQC,OAPzB,WACbO,GAAWR,MAQP,sBACEJ,UAAU,0FACVc,KAAK,eAFP,UAIE,cAAC,IAAD,CAAMJ,GAAG,IAAIV,UAAU,OAAvB,kBAGA,qBAAKA,UAAU,gBAAf,SACGR,EAAOgB,KAAI,SAACC,GACX,OACE,cAAC,IAAD,CAAMC,GAAID,EAAMf,KAAqBM,UAAU,MAA/C,SACGS,EAAMd,MADkBc,EAAMhB,eCPlCsB,MAhBf,WACE,OACE,mCACE,cAAC,IAAD,UACE,qBAAKf,UAAU,MAAf,SACE,cAAC,EAAD,WCHVgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BhD,M","file":"static/js/main.43ac65a9.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import { useEffect, useState } from 'react'\r\n\r\nexport const breakpoints = {\r\n  sm: 320,\r\n  md: 768,\r\n  lg: 1024,\r\n}\r\n\r\nexport const getIsMobile = (): boolean => {\r\n  const [width, setWidth] = useState(window.innerWidth)\r\n\r\n  function handleWindowSizeChange(): void {\r\n    setWidth(window.innerWidth)\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleWindowSizeChange)\r\n    return () => {\r\n      window.removeEventListener('resize', handleWindowSizeChange)\r\n    }\r\n  }, [])\r\n\r\n  return width < breakpoints.md\r\n}\r\n\r\nexport default getIsMobile\r\n","interface Link {\r\n  id: number\r\n  href: string\r\n  name: string\r\n}\r\n\r\nexport const routes: Link[] = [\r\n  { id: 1, href: '/', name: 'Home' },\r\n  { id: 2, href: '/menu', name: 'Menu' },\r\n  { id: 3, href: '/about', name: 'About' },\r\n  { id: 4, href: '/contact', name: 'Contact' },\r\n]\r\n\r\nexport default routes\r\n","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nexport const NavLinkListStyled = styled.div.attrs({\n  className: 'h-12 py-2',\n})``\n\nexport const NavLinkStyled = styled(Link).attrs({\n  className: 'text-2xl',\n})``\n\nexport default NavLinkStyled\n","import React from 'react'\r\nimport { AiOutlineClose, AiOutlineMenu } from 'react-icons/all'\r\nimport routes from '../routes/routes'\r\nimport NavLinkStyled, { NavLinkListStyled } from './navigation.styles'\r\n\r\ninterface NavigationMobileProps {\r\n  isOpen: boolean\r\n  toggle: () => void\r\n}\r\n\r\nexport const MobileNavigation = ({ isOpen, toggle }: NavigationMobileProps) => {\r\n  return (\r\n    <>\r\n      <div className=\"grid justify-items-end content-center h-10 pr-2\">\r\n        {isOpen ? <AiOutlineClose onClick={toggle} size={26} /> : <AiOutlineMenu onClick={toggle} size={26} />}\r\n      </div>\r\n      <div className={isOpen ? 'grid content-center divide-y divide-white-100 bg-gray-100' : 'hidden'}>\r\n        {routes.map((route) => {\r\n          return (\r\n            <NavLinkListStyled key={route.id}>\r\n              <NavLinkStyled to={route.href}>{route.name}</NavLinkStyled>\r\n            </NavLinkListStyled>\r\n          )\r\n        })}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MobileNavigation\r\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport getIsMobile from '../../helpers/helper'\nimport MobileNavigation from './navigationMobile'\nimport routes from '../routes/routes'\n\nexport const Navigation = () => {\n  const [isOpen, setIsOpen] = useState(false)\n  const isMobile = getIsMobile()\n  const toggle = (): void => {\n    setIsOpen(!isOpen)\n  }\n\n  return (\n    <>\n      {isMobile ? (\n        <MobileNavigation isOpen={isOpen} toggle={toggle} />\n      ) : (\n        <div\n          className=\"flex justify-between items-center h-16 bg-white text-black relative shadow-sm font-mono\"\n          role=\"presentation\"\n        >\n          <Link to=\"/\" className=\"pl-8\">\n            Logo\n          </Link>\n          <div className=\"pr-8 md:block\">\n            {routes.map((route) => {\n              return (\n                <Link to={route.href} key={route.id} className=\"p-4\">\n                  {route.name}\n                </Link>\n              )\n            })}\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default Navigation\n","import React from 'react'\nimport './App.css'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Navigation from './components/navigation/navigation'\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <div className=\"App\">\n          <Navigation />\n          {/* <Switch> */}\n          {/*  <Route path=\"/\" exact component={Home} /> */}\n          {/*  <Route path=\"/algorithms-overview\" component={AlgorithmsOverview} /> */}\n          {/* </Switch> */}\n        </div>\n      </Router>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\nimport reportWebVitals from './reportWebVitals'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}