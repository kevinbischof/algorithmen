{"version":3,"sources":["components/styles/button.tsx","reportWebVitals.ts","helpers/helper.ts","components/navigation/navigation.styles.ts","components/tiles/tile.styles.ts","components/styles/link.tsx","components/tiles/tile.tsx","components/algorithms/algorithms-overview.tiles.ts","components/algorithms/algorithms-overview.tsx","components/discrete-mathematics/discrete-mathematics-overview.tiles.tsx","components/discrete-mathematics/discrete-mathematics-overview.tsx","components/styles/title.tsx","components/styles/input.tsx","components/discrete-mathematics/isbn-check/partial/isbn-check.book.tsx","components/discrete-mathematics/isbn-check/isbn-check.tsx","routes/routes.ts","components/navigation/navigationMobile.tsx","components/navigation/navigation.tsx","components/home/home.tsx","App.tsx","index.tsx"],"names":["ButtonSkins","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","breakpoints","getIsMobile","useState","window","innerWidth","width","setWidth","handleWindowSizeChange","useEffect","addEventListener","removeEventListener","NavLinkListStyled","styled","div","attrs","className","NavLinkStyled","Link","TileStyled","href","children","Tile","tile","title","icon","src","image","alt","description","AlgorithmTiles","id","process","AlgorithmsOverview","map","DiscreteMathematicsTiles","DiscreteMathematicsOverview","Title","Input","input","BookContainer","BookInformations","Cover","Book","isbn","url","useFetch","headers","accept","data","copy","error","cover","thumbnail","copyCover","console","log","thumbnail_url","replace","items","volumeInfo","subtitle","authors","publishedDate","industryIdentifiers","item","index","type","identifier","pageCount","printType","language","reducer","previousValue","currentValue","ButtonStyled","button","IsbnCheckContainer","routes","name","component","value","setValue","setIsbn","isbnResult","setIsbnResult","onChange","e","target","Simple","onClick","positions","split","multiplicators","position","Number","reduce","checkIsbn","MobileNavigation","isOpen","toggle","size","color","route","to","Navigation","setIsOpen","isMobile","role","Home","App","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ad7a32f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport enum ButtonSkins {\r\n  Simple = 'bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded',\r\n  Outline = 'bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded',\r\n  Disabled = 'bg-blue-500 text-white font-bold py-2 px-4 rounded opacity-50 cursor-not-allowed',\r\n  Icons = 'bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center',\r\n}\r\n\r\nexport default ButtonSkins\r\n","import { ReportHandler } from 'web-vitals'\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import { useEffect, useState } from 'react'\r\n\r\nexport const breakpoints = {\r\n  sm: 320,\r\n  md: 768,\r\n  lg: 1024,\r\n}\r\n\r\nexport const getIsMobile = (): boolean => {\r\n  const [width, setWidth] = useState(window.innerWidth)\r\n\r\n  function handleWindowSizeChange(): void {\r\n    setWidth(window.innerWidth)\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleWindowSizeChange)\r\n    return () => {\r\n      window.removeEventListener('resize', handleWindowSizeChange)\r\n    }\r\n  }, [])\r\n\r\n  return width < breakpoints.md\r\n}\r\n\r\n/*\r\nReferenceError: Cannot access 'routes' before initialization\r\n\r\nexport function getHrefByRouteName(name: string): string {\r\n  const result = routes.find((route) => route.name === name)\r\n  return result ? result.href : ''\r\n}\r\n */\r\n\r\nexport default getIsMobile\r\n","import styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const NavLinkListStyled = styled.div.attrs({\r\n  className: 'h-12 py-2',\r\n})``\r\n\r\nexport const NavLinkStyled = styled(Link).attrs({\r\n  className: 'text-2xl',\r\n})``\r\n\r\nexport default NavLinkStyled\r\n","import styled from 'styled-components'\r\n\r\nexport const TileStyled = styled.div.attrs({\r\n  className: 'bg-white shadow-md',\r\n})`\r\n  height: 200px;\r\n  width: 200px;\r\n`\r\n\r\nexport default TileStyled\r\n","import React from 'react'\r\n\r\ninterface LinkProps {\r\n  className?: string\r\n  href: string\r\n  children: React.ReactNode\r\n}\r\n\r\nexport const Link = ({ className, href, children }: LinkProps) => {\r\n  return (\r\n    <a className={className} href={href}>\r\n      {children}\r\n    </a>\r\n  )\r\n}\r\n\r\nexport default Link\r\n","import { IconType } from 'react-icons'\r\nimport { ReactElement } from 'react'\r\nimport TileStyled from './tile.styles'\r\nimport Link from '../styles/link'\r\n\r\nexport interface TileInterface {\r\n  tile: TileProps\r\n}\r\n\r\nexport interface TileProps {\r\n  title: string\r\n  icon?: IconType\r\n  image?: string\r\n  description: string\r\n  href: string\r\n}\r\n\r\nexport const Tile = ({ tile }: TileInterface): ReactElement => {\r\n  return (\r\n    <Link href={tile.href}>\r\n      <TileStyled>\r\n        <div>{tile.title}</div>\r\n        <div>{tile.icon}</div>\r\n        <div>\r\n          <img src={tile.image} alt=\"alt\" />\r\n        </div>\r\n        <div>{tile.description}</div>\r\n      </TileStyled>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default Tile\r\n","import { TileProps } from '../tiles/tile'\r\n\r\ninterface AlgorithmTile extends TileProps {\r\n  id: number\r\n}\r\n\r\nexport const AlgorithmTiles: AlgorithmTile[] = [\r\n  {\r\n    id: 1,\r\n    title: 'Binäre Bäume',\r\n    image: `${process.env.PUBLIC_URL}/images/algorithms/binaere_baeume.png`,\r\n    description: 'Beschreibung',\r\n    href: '/binary-trees',\r\n  },\r\n]\r\n\r\nexport default AlgorithmTiles\r\n","import React from 'react'\r\nimport Tile from '../tiles/tile'\r\nimport AlgorithmTiles from './algorithms-overview.tiles'\r\n\r\nexport const AlgorithmsOverview = () => {\r\n  return (\r\n    <>\r\n      <h1>Algorithmen - Übersicht</h1>\r\n      {AlgorithmTiles.map((tile) => {\r\n        return <Tile key={tile.id} tile={tile} />\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AlgorithmsOverview\r\n","import { TileProps } from '../tiles/tile'\r\n\r\ninterface DiscreteMathematicsTile extends TileProps {\r\n  id: number\r\n}\r\n\r\nexport const DiscreteMathematicsTiles: DiscreteMathematicsTile[] = [\r\n  {\r\n    id: 1,\r\n    title: 'ISBN-Check',\r\n    image: '',\r\n    description: 'Prüfe, ob eine ISBN korrekt ist',\r\n    href: '/isbn-check',\r\n  },\r\n]\r\n\r\nexport default DiscreteMathematicsTiles\r\n","import React from 'react'\r\nimport Tile from '../tiles/tile'\r\nimport DiscreteMathematicsTiles from './discrete-mathematics-overview.tiles'\r\n\r\nexport const DiscreteMathematicsOverview = () => {\r\n  return (\r\n    <>\r\n      <h1>Diskrete Mathematik - Übersicht</h1>\r\n      {DiscreteMathematicsTiles.map((tile) => {\r\n        return <Tile key={tile.id} tile={tile} />\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DiscreteMathematicsOverview\r\n","import React from 'react'\r\n\r\ninterface TitleProps {\r\n  children: React.ReactNode\r\n}\r\n\r\nexport const Title = ({ children }: TitleProps) => {\r\n  return <div>{children}</div>\r\n}\r\n\r\nexport default Title\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Input = styled.input`\r\n  border: gray 1px solid;\r\n`\r\n\r\nexport default Input\r\n","import React, { useEffect } from 'react'\r\nimport { useFetch } from 'react-async'\r\nimport styled from 'styled-components'\r\nimport { GoogleBook } from '../isbn-check.types'\r\n\r\ninterface BookProps {\r\n  isbn: string\r\n}\r\n\r\nconst BookContainer = styled.div`\r\n  display: flex;\r\n  margin-top: 30px;\r\n  border: lightgray 1px solid;\r\n`\r\nconst BookInformations = styled.div``\r\nconst Cover = styled.div``\r\n\r\nexport function Book({ isbn }: BookProps): React.ReactElement {\r\n  const url = `https://www.googleapis.com/books/v1/volumes?q=isbn:${isbn}`\r\n  const { data, error } = useFetch(url, {\r\n    headers: { accept: 'application/json' },\r\n  })\r\n  const copy: GoogleBook = data as GoogleBook\r\n\r\n  const { data: cover } = useFetch(`https://openlibrary.org/api/books?bibkeys=${isbn}&format=json`, {\r\n    headers: { accept: 'application/json' },\r\n  })\r\n  let thumbnail = null\r\n  if (cover) {\r\n    const copyCover = cover as any\r\n    console.log(copyCover)\r\n    if (copyCover[isbn]) {\r\n      thumbnail = copyCover[isbn].thumbnail_url.replace('-S', '-L')\r\n      console.log(thumbnail)\r\n    }\r\n  } else {\r\n    thumbnail = null\r\n  }\r\n\r\n  return (\r\n    <BookContainer>\r\n      {copy && copy.items && (\r\n        <>\r\n          <BookInformations>\r\n            <div>Book-Title: {copy.items[0].volumeInfo.title}</div>\r\n            <div>Untertitel: {copy.items[0].volumeInfo.subtitle}</div>\r\n            <div>Autoren: {copy.items[0].volumeInfo.authors}</div>\r\n            <div>Veröffentlicht: {copy.items[0].volumeInfo.publishedDate}</div>\r\n            {copy.items[0].volumeInfo.industryIdentifiers?.map((item, index) => {\r\n              return (\r\n                <div key={item.type}>\r\n                  {item.type}: {item.identifier}\r\n                </div>\r\n              )\r\n            })}\r\n            <div>Seiten: {copy.items[0].volumeInfo.pageCount}</div>\r\n            <div>Buch-Typ: {copy.items[0].volumeInfo.printType}</div>\r\n            <div>Sprache: {copy.items[0].volumeInfo.language}</div>\r\n          </BookInformations>\r\n          {thumbnail && (\r\n            <Cover>\r\n              <img alt={copy.items[0].volumeInfo.title} src={thumbnail} />\r\n            </Cover>\r\n          )}\r\n        </>\r\n      )}\r\n    </BookContainer>\r\n  )\r\n}\r\n\r\nexport default Book\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useFetch } from 'react-async'\r\nimport Title from '../../styles/title'\r\nimport Input from '../../styles/input'\r\nimport ButtonSkins from '../../styles/button'\r\nimport { GoogleBook } from './isbn-check.types'\r\nimport Book from './partial/isbn-check.book'\r\n\r\nconst reducer = (previousValue: number, currentValue: number) => previousValue + currentValue\r\n\r\nconst ButtonStyled = styled.button`\r\n  margin-top: 15px;\r\n`\r\n\r\nconst IsbnCheckContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nfunction checkIsbn(isbn: string): boolean {\r\n  if (!isbn) return false\r\n\r\n  const positions = isbn.split('')\r\n  const multiplicators = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]\r\n  const gewichteteSumme = positions\r\n    .map((position, index) => {\r\n      return multiplicators[index] * Number(position)\r\n    })\r\n    .reduce(reducer)\r\n  return gewichteteSumme % 11 === 0\r\n}\r\n\r\nexport const IsbnCheck = () => {\r\n  const [value, setValue] = useState('')\r\n  const [isbn, setIsbn] = useState('')\r\n  const [isbnResult, setIsbnResult] = useState<boolean>()\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  return (\r\n    <IsbnCheckContainer>\r\n      <Title>ISBN-Check 10-Stellig</Title>\r\n      <Input value={value} title=\"ISBN-Input\" onChange={(e) => setValue(e.target.value)} />\r\n      <br />\r\n      <ButtonStyled\r\n        type=\"submit\"\r\n        aria-label=\"submit\"\r\n        className={ButtonSkins.Simple}\r\n        onClick={() => {\r\n          setIsbn(value)\r\n          setIsbnResult(checkIsbn(value))\r\n        }}\r\n      >\r\n        Submit\r\n      </ButtonStyled>\r\n      <br />\r\n      {isbn && (\r\n        <div>\r\n          ISBN: {isbn} ist {isbnResult ? 'korrekt' : 'falsch'}\r\n          <Book isbn={isbn} />\r\n        </div>\r\n      )}\r\n    </IsbnCheckContainer>\r\n  )\r\n}\r\n\r\nexport default IsbnCheck\r\n","import React from 'react'\r\nimport AlgorithmsOverview from '../components/algorithms/algorithms-overview'\r\nimport DiscreteMathematicsOverview from '../components/discrete-mathematics/discrete-mathematics-overview'\r\nimport IsbnCheck from '../components/discrete-mathematics/isbn-check/isbn-check'\r\n\r\ninterface Link {\r\n  id: number\r\n  href: string\r\n  name: string\r\n  component: React.ComponentType<any>\r\n}\r\n\r\nexport const routes: Link[] = [\r\n  { id: 2, href: '/algorithms', name: 'Algorithmen', component: AlgorithmsOverview },\r\n  { id: 3, href: '/discrete-mathematics', name: 'Diskrete Mathematik', component: DiscreteMathematicsOverview },\r\n  // { id: 4, href: '/binary-trees', name: 'Binäre Bäume' },\r\n  { id: 5, href: '/isbn-check', name: 'ISBN-Check', component: IsbnCheck },\r\n]\r\n\r\nexport default routes\r\n","import React from 'react'\r\nimport { AiOutlineClose, AiOutlineMenu } from 'react-icons/all'\r\nimport NavLinkStyled, { NavLinkListStyled } from './navigation.styles'\r\nimport routes from '../../routes/routes'\r\n\r\ninterface NavigationMobileProps {\r\n  isOpen: boolean\r\n  toggle: () => void\r\n}\r\n\r\nexport const MobileNavigation = ({ isOpen, toggle }: NavigationMobileProps) => {\r\n  return (\r\n    <>\r\n      <div className={`grid justify-items-end content-center h-10 pr-2 bg-gray-800 ${!isOpen ? 'mb-4' : ''}`}>\r\n        {isOpen ? (\r\n          <AiOutlineClose onClick={toggle} size={26} color=\"white\" />\r\n        ) : (\r\n          <AiOutlineMenu onClick={toggle} size={26} color=\"white\" />\r\n        )}\r\n      </div>\r\n      <div className={isOpen ? 'grid content-center divide-y divide-white-100 bg-gray-100 mb-4' : 'hidden'}>\r\n        {routes.map((route) => {\r\n          return (\r\n            <NavLinkListStyled key={route.id}>\r\n              <NavLinkStyled to={route.href}>{route.name}</NavLinkStyled>\r\n            </NavLinkListStyled>\r\n          )\r\n        })}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MobileNavigation\r\n","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FaCode } from 'react-icons/all'\r\nimport getIsMobile from '../../helpers/helper'\r\nimport MobileNavigation from './navigationMobile'\r\nimport routes from '../../routes/routes'\r\n\r\nexport const Navigation = () => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const isMobile = getIsMobile()\r\n  const toggle = (): void => {\r\n    setIsOpen(!isOpen)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isMobile ? (\r\n        <MobileNavigation isOpen={isOpen} toggle={toggle} />\r\n      ) : (\r\n        <div\r\n          className=\"flex justify-between items-center h-16 pl-4 mb-4 bg-gray-800 text-white relative shadow-sm\"\r\n          role=\"presentation\"\r\n        >\r\n          <Link to=\"/\">\r\n            <FaCode size={30} color=\"white\" />\r\n          </Link>\r\n          <div className=\"pr-8 md:block\">\r\n            {routes.map((route) => {\r\n              return (\r\n                <Link to={route.href} key={route.id} className=\"p-4\">\r\n                  {route.name}\r\n                </Link>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Navigation\r\n","import React from 'react'\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <>\r\n      <div>Home</div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport './App.css'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Navigation from './components/navigation/navigation'\r\nimport Home from './components/home/home'\r\nimport routes from './routes/routes'\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <div className=\"App font-sans\">\r\n          <Navigation />\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            {routes.map((route) => {\r\n              return <Route key={route.id} path={route.href} component={route.component} />\r\n            })}\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\n\r\nimport reportWebVitals from './reportWebVitals'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}